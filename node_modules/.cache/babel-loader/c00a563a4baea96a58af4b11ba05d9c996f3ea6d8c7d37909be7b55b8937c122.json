{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srisa\\\\Intern_Assignment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport TaskFilter from './components/TaskFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Load username, tasks, and dark mode from localStorage on mount\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n    const storedDarkMode = localStorage.getItem('darkMode');\n    if (storedDarkMode === 'true') {\n      setDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n\n  // Save tasks to localStorage when tasks change\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // Save username to localStorage when it changes\n  useEffect(() => {\n    if (username) {\n      localStorage.setItem('username', username);\n    } else {\n      localStorage.removeItem('username');\n    }\n  }, [username]);\n\n  // Save dark mode preference\n  useEffect(() => {\n    localStorage.setItem('darkMode', darkMode);\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  const handleLogin = name => {\n    setUsername(name);\n  };\n  const handleLogout = () => {\n    setUsername('');\n    setTasks([]);\n    localStorage.removeItem('tasks');\n  };\n  const addTask = task => {\n    setTasks(prev => [...prev, task]);\n  };\n  const updateTask = updatedTask => {\n    setTasks(prev => prev.map(t => t.id === updatedTask.id ? updatedTask : t));\n  };\n  const deleteTask = id => {\n    setTasks(prev => prev.filter(t => t.id !== id));\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'completed') return task.completed;\n    if (filter === 'pending') return !task.completed;\n    return true;\n  }).filter(task => {\n    const term = searchTerm.toLowerCase();\n    return task.title.toLowerCase().includes(term) || task.description && task.description.toLowerCase().includes(term);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container${darkMode ? ' dark' : ''}`,\n    children: !username ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [username, \"'s Task Tracker\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDarkMode(!darkMode),\n            className: \"dark-mode-toggle\",\n            \"aria-label\": \"Toggle dark mode\",\n            children: darkMode ? 'Light Mode' : 'Dark Mode'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"logout-button\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskFilter, {\n        filter: filter,\n        setFilter: setFilter,\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: filteredTasks,\n        updateTask: updateTask,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"diKM0gVZWKoKc6oLUnHdg4iYq10=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","TaskForm","TaskList","TaskFilter","jsxDEV","_jsxDEV","App","_s","username","setUsername","tasks","setTasks","filter","setFilter","searchTerm","setSearchTerm","darkMode","setDarkMode","storedUsername","localStorage","getItem","storedTasks","JSON","parse","storedDarkMode","document","body","classList","add","setItem","stringify","removeItem","remove","handleLogin","name","handleLogout","addTask","task","prev","updateTask","updatedTask","map","t","id","deleteTask","filteredTasks","completed","term","toLowerCase","title","includes","description","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/srisa/Intern_Assignment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Login from './components/Login';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\nimport TaskFilter from './components/TaskFilter';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filter, setFilter] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  // Load username, tasks, and dark mode from localStorage on mount\r\n  useEffect(() => {\r\n    const storedUsername = localStorage.getItem('username');\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    }\r\n    const storedTasks = localStorage.getItem('tasks');\r\n    if (storedTasks) {\r\n      setTasks(JSON.parse(storedTasks));\r\n    }\r\n    const storedDarkMode = localStorage.getItem('darkMode');\r\n    if (storedDarkMode === 'true') {\r\n      setDarkMode(true);\r\n      document.body.classList.add('dark-mode');\r\n    }\r\n  }, []);\r\n\r\n  // Save tasks to localStorage when tasks change\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  // Save username to localStorage when it changes\r\n  useEffect(() => {\r\n    if (username) {\r\n      localStorage.setItem('username', username);\r\n    } else {\r\n      localStorage.removeItem('username');\r\n    }\r\n  }, [username]);\r\n\r\n  // Save dark mode preference\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', darkMode);\r\n    if (darkMode) {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  }, [darkMode]);\r\n\r\n  const handleLogin = (name) => {\r\n    setUsername(name);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUsername('');\r\n    setTasks([]);\r\n    localStorage.removeItem('tasks');\r\n  };\r\n\r\n  const addTask = (task) => {\r\n    setTasks(prev => [...prev, task]);\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(prev => prev.map(t => (t.id === updatedTask.id ? updatedTask : t)));\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(prev => prev.filter(t => t.id !== id));\r\n  };\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    if (filter === 'completed') return task.completed;\r\n    if (filter === 'pending') return !task.completed;\r\n    return true;\r\n  }).filter(task => {\r\n    const term = searchTerm.toLowerCase();\r\n    return (\r\n      task.title.toLowerCase().includes(term) ||\r\n      (task.description && task.description.toLowerCase().includes(term))\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={`app-container${darkMode ? ' dark' : ''}`}>\r\n      {!username ? (\r\n        <Login onLogin={handleLogin} />\r\n      ) : (\r\n        <div className=\"dashboard\">\r\n          <header>\r\n            <h1>{username}'s Task Tracker</h1>\r\n            <div className=\"header-controls\">\r\n              {/* Removed search input as per user request */}\r\n              <button\r\n                onClick={() => setDarkMode(!darkMode)}\r\n                className=\"dark-mode-toggle\"\r\n                aria-label=\"Toggle dark mode\"\r\n              >\r\n                {darkMode ? 'Light Mode' : 'Dark Mode'}\r\n              </button>\r\n              <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n            </div>\r\n          </header>\r\n          <TaskForm addTask={addTask} />\r\n          <TaskFilter filter={filter} setFilter={setFilter} tasks={tasks} />\r\n          <TaskList\r\n            tasks={filteredTasks}\r\n            updateTask={updateTask}\r\n            deleteTask={deleteTask}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}